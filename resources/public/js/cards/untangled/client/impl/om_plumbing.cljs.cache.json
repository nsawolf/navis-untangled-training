["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros"],"~:excludes",["~#set",[]],"~:name","~$untangled.client.impl.om-plumbing","~:imports",null,"~:requires",["^ ","~$log","~$untangled.client.logging","~$i18n","~$untangled.i18n.core","~$clojure.zip","^?","~$om.next.impl.parser","^@","~$async","~$cljs.core.async","~$walk","~$clojure.walk","^B","^B","^>","^>","~$m","~$untangled.client.mutations","~$util","~$om.util","^E","^E","~$op","^@","^<","^<","~$om","~$om.next","^J","^J","~$zip","^?","^D","^D","^G","^G"],"~:uses",null,"~:defs",["^ ","~$postwalk",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","~:line",136,"~:column",7,"~:end-line",136,"~:end-column",15,"~:arglists",["~#list",["~$quote",["^W",[["~$f","~$form"]]]]]],"^7","~$untangled.client.impl.om-plumbing/postwalk","~:variadic",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",15,"~:method-params",["^W",[["~$f","^Y"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^S",1,"^R",136,"^T",136,"~:max-fixed-arity",2,"~:fn-var",true,"^V",["^W",["^X",["^W",[["~$f","^Y"]]]]]],"~$add-meta-to-recursive-queries",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",142,"^S",7,"^T",142,"^U",36,"^V",["^W",["^X",["^W",[["~$q"]]]]]],"^7","~$untangled.client.impl.om-plumbing/add-meta-to-recursive-queries","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",36,"^10",["^W",[["~$q"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",142,"^T",142,"^13",1,"^14",true,"^V",["^W",["^X",["^W",[["~$q"]]]]]],"~$rewrite-tempids-in-request-queue",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",69,"^S",7,"^T",69,"^U",39,"^V",["^W",["^X",["^W",[["~$queue","~$tempid-map"]]]]],"~:doc","Rewrite any pending requests in the request queue to account for the fact that a response might have\n  changed ids that are expressed in the mutations of that queue. tempid-map MUST be a map from om\n  tempid to real ids, not idents."],"^7","~$untangled.client.impl.om-plumbing/rewrite-tempids-in-request-queue","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",39,"^10",["^W",[["^18","^19"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",69,"^T",69,"^13",2,"^14",true,"^V",["^W",["^X",["^W",[["^18","^19"]]]]],"^1:","Rewrite any pending requests in the request queue to account for the fact that a response might have\n  changed ids that are expressed in the mutations of that queue. tempid-map MUST be a map from om\n  tempid to real ids, not idents."],"~$nf",["^ ","^7","~$untangled.client.impl.om-plumbing/nf","^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",122,"^S",1,"^T",122,"^U",8,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",122,"^S",6,"^T",122,"^U",8]],"~$read-local",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",14,"^S",7,"^T",14,"^U",17,"^V",["^W",["^X",["^W",[[["^ ","~:keys",["~$query","~$target","~$state","~$ast"]],"~$dkey","~$_"]]]]],"^1:","Read function for the Om parser.\n\n  *** NOTE: This function only runs when it is called without a target -- it is not triggered for remote reads. To\n  trigger a remote read, use the `untangled/data-fetch` namespace. ***\n\n  Returns the current locale when reading the :ui/locale keyword. Otherwise pulls data out of the app-state.\n  "],"^7","~$untangled.client.impl.om-plumbing/read-local","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",17,"^10",["^W",[["~$p__36626","^1D","~$_"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",14,"^T",14,"^13",3,"^14",true,"^V",["^W",["^X",["^W",[[["^ ","^1?",["^1@","^1A","^1B","^1C"]],"^1D","~$_"]]]]],"^1:","Read function for the Om parser.\n\n  *** NOTE: This function only runs when it is called without a target -- it is not triggered for remote reads. To\n  trigger a remote read, use the `untangled/data-fetch` namespace. ***\n\n  Returns the current locale when reading the :ui/locale keyword. Otherwise pulls data out of the app-state.\n  "],"~$mark-missing",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",181,"^S",7,"^T",181,"^U",19,"^V",["^W",["^X",["^W",[["~$result","^1@"]]]]],"^1:","Recursively walk the query and response marking anything that was *asked for* in the query but is *not* in the response as missing.\n  The merge process (which happens later in the plumbing) looks for these markers as indicators to remove any existing\n  data in the database (which has provably disappeared).\n\n  The naive approach to data merging (even recursive) would fail to remove such data.\n\n  Returns the result with missing markers in place (which are then used/removed in a later stage)."],"^7","~$untangled.client.impl.om-plumbing/mark-missing","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",19,"^10",["^W",[["^1H","^1@"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",181,"^T",181,"^13",2,"^14",true,"^V",["^W",["^X",["^W",[["^1H","^1@"]]]]],"^1:","Recursively walk the query and response marking anything that was *asked for* in the query but is *not* in the response as missing.\n  The merge process (which happens later in the plumbing) looks for these markers as indicators to remove any existing\n  data in the database (which has provably disappeared).\n\n  The naive approach to data merging (even recursive) would fail to remove such data.\n\n  Returns the result with missing markers in place (which are then used/removed in a later stage)."],"~$resolve-tempids",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",62,"^S",7,"^T",62,"^U",22,"^V",["^W",["^X",["^W",[["^1B","~$tid->rid"]]]]],"^1:","Replaces all om-tempids in app-state with the ids returned by the server."],"^7","~$untangled.client.impl.om-plumbing/resolve-tempids","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",22,"^10",["^W",[["^1B","^1K"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",62,"^T",62,"^13",2,"^14",true,"^V",["^W",["^X",["^W",[["^1B","^1K"]]]]],"^1:","Replaces all om-tempids in app-state with the ids returned by the server."],"^C",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",124,"^S",7,"^T",124,"^U",11,"^V",["^W",["^X",["^W",[["~$inner","~$outer","^Y"]]]]]],"^7","~$untangled.client.impl.om-plumbing/walk","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",11,"^10",["^W",[["^1M","^1N","^Y"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",124,"^T",124,"^13",3,"^14",true,"^V",["^W",["^X",["^W",[["^1M","^1N","^Y"]]]]]],"~$write-entry-point",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",36,"^S",7,"^T",36,"^U",24,"^V",["^W",["^X",["^W",[["~$env","~$k","~$params"]]]]],"^1:","This is the Om entry point for writes. In general this is simply a call to the multi-method\n  defined by Untangled (mutate); however, Untangled supports the concept of a global `post-mutate`\n  function that will be called anytime the general mutate has an action that is desired. This\n  can be useful, for example, in cases where you have some post-processing that needs\n  to happen for a given (sub)set of mutations (that perhaps you did not define)."],"^7","~$untangled.client.impl.om-plumbing/write-entry-point","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",24,"^10",["^W",[["^1Q","~$k","^1R"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",36,"^T",36,"^13",3,"^14",true,"^V",["^W",["^X",["^W",[["^1Q","~$k","^1R"]]]]],"^1:","This is the Om entry point for writes. In general this is simply a call to the multi-method\n  defined by Untangled (mutate); however, Untangled supports the concept of a global `post-mutate`\n  function that will be called anytime the general mutate has an action that is desired. This\n  can be useful, for example, in cases where you have some post-processing that needs\n  to happen for a given (sub)set of mutations (that perhaps you did not define)."],"~$fallback-query",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",89,"^S",7,"^T",89,"^U",21,"^V",["^W",["^X",["^W",[["^1@","~$resp"]]]]]],"^7","~$untangled.client.impl.om-plumbing/fallback-query","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",21,"^10",["^W",[["^1@","^1U"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",89,"^T",89,"^13",2,"^14",true,"^V",["^W",["^X",["^W",[["^1@","^1U"]]]]]],"~$is-ui-query-fragment?",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",103,"^S",8,"^T",103,"^U",29,"~:private",true,"^V",["^W",["^X",["^W",[["~$kw"]]]]],"^1:","Check the given keyword to see if it is in the :ui namespace."],"^1X",true,"^7","~$untangled.client.impl.om-plumbing/is-ui-query-fragment?","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",29,"^10",["^W",[["^1Y"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",103,"^T",103,"^13",1,"^14",true,"^V",["^W",["^X",["^W",[["^1Y"]]]]],"^1:","Check the given keyword to see if it is in the :ui namespace."],"~$prewalk",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",133,"^S",7,"^T",133,"^U",14,"^V",["^W",["^X",["^W",[["~$f","^Y"]]]]]],"^7","~$untangled.client.impl.om-plumbing/prewalk","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",14,"^10",["^W",[["~$f","^Y"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",133,"^T",133,"^13",2,"^14",true,"^V",["^W",["^X",["^W",[["~$f","^Y"]]]]]],"~$strip-ui",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",108,"^S",7,"^T",108,"^U",15,"^V",["^W",["^X",["^W",[["^1@"]]]]],"^1:","Returns a new query with fragments that are in the `ui` namespace removed."],"^7","~$untangled.client.impl.om-plumbing/strip-ui","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",15,"^10",["^W",[["^1@"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",108,"^T",108,"^13",1,"^14",true,"^V",["^W",["^X",["^W",[["^1@"]]]]],"^1:","Returns a new query with fragments that are in the `ui` namespace removed."],"~$recursive?",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",139,"^S",7,"^T",139,"^U",17,"^V",["^W",["^X",["^W",[["~$qf"]]]]]],"^7","~$untangled.client.impl.om-plumbing/recursive?","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",17,"^10",["^W",[["^24"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",139,"^T",139,"^13",1,"^14",true,"^V",["^W",["^X",["^W",[["^24"]]]]]],"~$remove-loads-and-fallbacks",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",79,"^S",7,"^T",79,"^U",33,"^V",["^W",["^X",["^W",[["^1@"]]]]],"^1:","Removes all untangled/load and tx/fallback mutations from the query"],"^7","~$untangled.client.impl.om-plumbing/remove-loads-and-fallbacks","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",33,"^10",["^W",[["^1@"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",79,"^T",79,"^13",1,"^14",true,"^V",["^W",["^X",["^W",[["^1@"]]]]],"^1:","Removes all untangled/load and tx/fallback mutations from the query"],"~$leaf?",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",172,"^S",7,"^T",172,"^U",12,"^V",["^W",["^X",["^W",[["~$data"]]]]],"^1:","Returns true iff the given data is marked as a leaf in the result (according to the query). Requires pre-marking."],"^7","~$untangled.client.impl.om-plumbing/leaf?","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",12,"^10",["^W",[["^29"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",172,"^T",172,"^13",1,"^14",true,"^V",["^W",["^X",["^W",[["^29"]]]]],"^1:","Returns true iff the given data is marked as a leaf in the result (according to the query). Requires pre-marking."],"~$as-leaf",["^ ","^O",null,"^P",["^ ","^Q","/Users/Nicole/projects/untangled-template-workspace/resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^R",165,"^S",7,"^T",165,"^U",14,"^V",["^W",["^X",["^W",[["^29"]]]]],"^1:","Returns data with meta-data marking it as a leaf in the result."],"^7","~$untangled.client.impl.om-plumbing/as-leaf","^[",false,"^Q","resources/public/js/cards/untangled/client/impl/om_plumbing.cljs","^U",14,"^10",["^W",[["^29"]]],"^11",null,"^12",["^W",[null,null]],"^S",1,"^R",165,"^T",165,"^13",1,"^14",true,"^V",["^W",["^X",["^W",[["^29"]]]]],"^1:","Returns data with meta-data marking it as a leaf in the result."]],"~:require-macros",["^ ","^4","^4","^I","^J","^J","^J"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:untangled/leaf","~:children","~:key","~:else","~:map-entry?","~:ui/fetch-state","~:value","~:params","~$untangled/load","~:ast","~:execute","~:state","~:untangled.client.impl.data-fetch/type","~:not-found","~:...","~:dispatch-key","~:action","~:error","~:depth","~:target","~:untangled.client.impl.om-plumbing/not-found","~:query","~$...","~$tx/fallback"]],"~:order",["^2U","^2S","^2K","^2I","^2B","^2F","^2C","^2P","^2H","^2W","^2A","^2O","^2G","^2J","^2Q","^2T","^2D","^2V","^2R","^2N","^2@","^2E","^2L","^2M"]],"^1:",null]